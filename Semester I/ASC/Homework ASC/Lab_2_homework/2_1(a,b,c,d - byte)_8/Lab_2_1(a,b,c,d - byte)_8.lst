     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ;a,b,c,d - byte
    14 00000000 0A                          a db 10
    15 00000001 14                          b db 20
    16 00000002 0F                          d db 15
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ;(a+b-d)+(a-b-d)
    22                                          
    23                                          ;a+b
    24 00000000 A0[00000000]                    mov AL, [a]
    25 00000005 0205[01000000]                  add AL, [b]
    26                                          
    27                                          ;(a+b-d)
    28 0000000B 2A05[02000000]                  sub AL, [d]
    29                                          
    30                                          ;a-b
    31 00000011 8A25[00000000]                  mov AH, [a]
    32 00000017 2A25[01000000]                  sub AH, [b]
    33                                          
    34                                          ;(a-b-d)
    35 0000001D 2A25[02000000]                  sub AH, [d]
    36                                          
    37                                          ;(a+b-d)+(a-b-d)
    38 00000023 00C4                            add Ah, Al
    39 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
